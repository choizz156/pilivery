on:
  push:
    branches: [ "feat/quartz" ]

  workflow_dispatch: 

env:
  ECR_REPO_URL: ${{ secrets.ECR_REPO_URL }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  compose:
    runs-on: ubuntu-latest

    steps:
      
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          token: ${{ secrets.SECRET_TOKEN }}  
     
      - name: Update submodules manually
        run: |
          git submodule sync
          git submodule update --init --force --remote --recursive

    
      - name: AWS credentials 셋팅
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: ECR 로그인 
        run: aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO_URL }}

      - name: ECR 이미지 푸시
        run: | 
          cd ./server
          docker compose -f quartz.compose.yml build --push
      
      - name: 도커 이미지 pull
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PEM_KEY }}
          envs: ECR_REPO_URL,IMAGE_TAG
          script: |
              aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $ECR_REPO_URL
            
              
      - name: Deploy to EC2 with CodeDeploy
        run: aws deploy create-deployment
          --application-name codedeploy
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name production
