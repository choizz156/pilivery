plugins {
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

configurations {
    asciidoctorExt
}

dependencies {
    //lombok
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    testImplementation 'org.springframework.security:spring-security-test'

    //db
    runtimeOnly 'com.h2database:h2'

    //quartz
    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    //junit5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.1'

    //fixture-monkey
    implementation 'com.navercorp.fixturemonkey:fixture-monkey:0.6.1'

    //restdocs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

    //rest-assured-mockmvc
    testImplementation 'io.rest-assured:spring-mock-mvc:4.5.1'

    //restassured
    testImplementation 'io.rest-assured:rest-assured-all'

    //jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
}

ext { // 전역 변수
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'

    sources { // 특정 파일만 html로 만든다.
        include("**/index.adoc")
    }
    baseDirFollowsSourceFile() // 다른 adoc 파일을 include 할 때 경로를 baseDir로 맞춘다.
    dependsOn test //작업순서 test -> asciidoctor
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}")
    into 'static/docs'
}
